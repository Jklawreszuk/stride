<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Stride.Core.Assets.Editor.View.Controls"
                    xmlns:sd="http://schemas.stride3d.net/xaml/presentation"
                    xmlns:view="clr-namespace:Stride.Core.Assets.Editor.View"
                    xmlns:diagnostics="clr-namespace:Stride.Core.Assets.Diagnostics;assembly=Stride.Core.Assets">

  <ResourceDictionary.MergedDictionaries>
    <ResourceInclude Source="avares://Stride.Core.Presentation.Avalonia/Themes/ThemeSelector.axaml" />
<!--     <ResourceInclude Source="avares://Stride.Core.Assets.Editor.Avalonia/View/CommonResources.axaml" /> -->
  </ResourceDictionary.MergedDictionaries>
  
  <ControlTheme x:Key="{x:Type HeaderedItemsControl}" TargetType="HeaderedItemsControl" BasedOn="{StaticResource {x:Type ItemsControl}}" />
  
  <ControlTheme x:Key="{x:Type controls:GridLogViewer}" TargetType="controls:GridLogViewer">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:GridLogViewer">
          <DockPanel x:Name="PART_GridLogViewerCollectionSourceContainer">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" IsVisible="{Binding IsToolBarVisible, RelativeSource={RelativeSource Mode=TemplatedParent}}">
              <HeaderedItemsControl  Header="Filters:" IsVisible="{Binding CanFilterLog, RelativeSource={RelativeSource Mode=TemplatedParent}}">
	<HeaderedItemsControl.ItemsPanel>
		<ItemsPanelTemplate>
			<StackPanel Orientation="Horizontal">
			</StackPanel>
		</ItemsPanelTemplate>
	</HeaderedItemsControl.ItemsPanel>
                <ToggleButton IsChecked="{Binding ShowDebugMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Debug, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogDebugBrush}" Data="{StaticResource GeometryDebugMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowVerboseMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Verbose, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogVerboseBrush}" Data="{StaticResource GeometryVerboseMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowInfoMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Info, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogInfoBrush}" Data="{StaticResource GeometryInfoMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowWarningMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Warning, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogWarningBrush}" Data="{StaticResource GeometryWarningMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowErrorMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Error, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogErrorBrush}" Data="{StaticResource GeometryErrorMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowFatalMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Fatal, Context=ToolTip}">
                  <Path Width="12" Height="12" Stretch="Uniform" Fill="{StaticResource TextLogFatalBrush}" Data="{StaticResource GeometryFatalMessage}" />
                </ToggleButton>
                <ToggleButton IsChecked="{Binding ShowStacktrace, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip.Tip="{sd:Localize Toggle Exception Stack Trace, Context=ToolTip}">
                  <Label Content="(...)" Width="30" Height="12" FontSize="10" HorizontalContentAlignment="Center" />
                </ToggleButton>
              </HeaderedItemsControl>
            </StackPanel>
            <DataGrid x:Name="PART_LogGridView" ItemsSource="{Binding FilteredLogMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                             AutoGenerateColumns="False" 
                             CanUserReorderColumns="False" 
                             IsReadOnly="True">
              <DataGrid.Resources>
                <DataTemplate x:Key="LogMessageTypeCellTemplate" DataType="diagnostics:AssetSerializableLogMessage">
                  <Path x:Name="MessageTypePath" Width="12" Height="12" Stretch="Uniform" Fill="{DynamicResource TextBrush}"
                    Classes.DebugPathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Debug  }"
                    Classes.VerbosePathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Verbose  }"
                    Classes.InfoPathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Info  }"
                    Classes.WarningPathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Warning  }"
                    Classes.ErrorPathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Error  }"
                    Classes.FatalPathType="{Binding DataContext.Type, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Mode=OneWay, Converter={sd:StringEquals} ConverterParameter=Fatal  }"
                    >
                  <Path.Styles>
                          <Style Selector="Path.DebugPathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryDebugMessage}" />
                          </Style>
                          <Style Selector="Path.VerbosePathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryVerboseMessage}" />
                          </Style>
                          <Style Selector="Path.InfoPathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryInfoMessage}" />
                          </Style>
                          <Style Selector="Path.WarningPathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryWarningMessage}" />
                          </Style>
                          <Style Selector="Path.ErrorPathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryErrorMessage}" />
                          </Style>
                          <Style Selector="Path.FatalPathType">
                                  <Setter Property="Path.Data" Value="{DynamicResource GeometryFatalMessage}" />
                          </Style>
                  </Path.Styles>                    
                  </Path>
                </DataTemplate>
                <DataTemplate x:Key="LogMessageHasExceptionCellTemplate" DataType="diagnostics:AssetSerializableLogMessage">
                  <Border>
                    <Image  Width="16" Height="16" Stretch="None" VerticalAlignment="Center" Source="../Resources/Images/exception.png" IsVisible="{Binding ExceptionInfo, Mode=OneTime, Converter={sd:ObjectToBool}}">
                      <ToolTip.Tip>
                        <TextBlock Text="{Binding ExceptionInfo.TypeFullName, Mode=OneTime}" Foreground="#FF2B91AF" FontWeight="Bold"/>
                      </ToolTip.Tip>
                    </Image>
                  </Border>
                </DataTemplate>
                <DataTemplate x:Key="LogMessageAssetUrlCellTemplate" DataType="{x:Type diagnostics:AssetSerializableLogMessage}">
                  <StackPanel>                  
                 <TextBlock Text="{sd:PriorityBinding {Binding DataContext.AssetUrl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}, {Binding DataContext.AssetReference.Location, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}}" />
                  <TextBlock Text="Checkme - should be one of two text boxes below" />
                  <TextBlock Text="{Binding DataContext.AssetUrl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" />
                  <TextBlock Text="{Binding DataContext.AssetReference.Location, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" />
                  </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="LogMessageTextCellTemplate" DataType="diagnostics:AssetSerializableLogMessage">
                  <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                </DataTemplate>
              </DataGrid.Resources>
              <DataGrid.Columns>
                <DataGridTemplateColumn Header="" MinWidth="16" MaxWidth="16" CellTemplate="{StaticResource LogMessageTypeCellTemplate}" >
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="" MinWidth="16" MaxWidth="16" CellTemplate="{StaticResource LogMessageHasExceptionCellTemplate}"  />
                <DataGridTemplateColumn Header="Message" Width="*" CellTemplate="{StaticResource LogMessageTextCellTemplate}"  />
                <DataGridTemplateColumn Header="Asset" Width="200" CellTemplate="{StaticResource LogMessageAssetUrlCellTemplate}"  />
              </DataGrid.Columns>
            </DataGrid>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </ControlTheme>
</ResourceDictionary>
